// A ready to go setup for devcontainers in VSCode
// If you want to customize it for your own needs you may copy the `./devcontainer/template` folder and 
// rename it to `./devcontainer/custom`, which is ignored by git. Then change the `devcontainer.json` file
// to your needs (especially the name).
{
    "name": "Custom",
    "hostRequirements": {"gpu": true },
    "build": { "dockerfile": "Dockerfile" },
    "forwardPorts": [53593], // Used for recoflyte authentication
    // Update the UID of the remote user to match your local user (to fit the mounted file permissions)
    // Only works on Linux
    "updateRemoteUserUID": true,
    "remoteUser": "vscode",
    "customizations": {
      "vscode": {
        "settings": {
          "python.defaultInterpreterPath": "/opt/pyenv-root/shims/python",
          "terminal.integrated.defaultProfile.linux": "bash",
          "terminal.integrated.profiles.linux": { "zsh": { "path": "/bin/zsh" }, "bash": { "path": "/bin/bash" } },
          "editor.defaultFormatter": "charliermarsh.ruff",
          "editor.formatOnSave": true,
          "notebook.formatOnSave.enabled": true,
          "python.analysis.typeCheckingMode": "standard",
          "python.testing.pytestEnabled": true,
          "python.testing.unittestEnabled": false,
          "python.testing.pytestArgs": ["."],
          "editor.codeActionsOnSave": {"source.fixAll": "explicit", "source.organizeImports": "explicit"},
          "notebook.codeActionsOnSave": {"notebook.source.fixAll": "explicit", "notebook.source.organizeImports": "explicit"}
          },
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "eamodio.gitlens",
        "njpwerner.autodocstring",
        "ms-azuretools.vscode-docker",
        "charliermarsh.ruff",
        "vscodevim.vim",
        "github.copilot",
        "ms-toolsai.jupyter",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.jupyter-renderers",
        "mutantdino.resourcemonitor",
        "tabnine.tabnine-vscode",
        "formulahendry.code-runner"
      ]
    }
    },
    "postCreateCommand": "pre-commit install --install-hooks",
    "mounts": [
      "source=/etc/ssh/ssh_host_ecdsa_key,target=/etc/ssh/ssh_host_ecdsa_key,type=bind,consistency=cached,readonly",
      "source=${localEnv:HOME}${localEnv:USERPROFILE},target=/host-home-folder,type=bind,consistency=cached"
    ],
    "runArgs": ["--shm-size=16gb", "--gpus=all"],
    "features": {
      "ghcr.io/devcontainers/features/docker-in-docker:2": {}
    }
}

